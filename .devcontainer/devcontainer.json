// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/debian
{
  "name": "Rolling Updates Example Devcontainer",

  // Use a base image from github.com/devcontainers/images. More info: https://aka.ms/vscode-remote/devcontainer.json.
  // Use a prebuilt image from mcr.microsoft.com/devcontainers/base. More info: https://aka.ms/vscode-remote/devcontainer.json.
  // Use a prebuilt image from docker.io. More info: https://aka.ms/vscode-remote/devcontainer.json.
  // image: "mcr.microsoft.com/devcontainers/base:bullseye",

  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "build": {
    "dockerfile": "Dockerfile"
  },

  // Inject additional Docker CLI arguments when creating the container. More info: https://aka.ms/vscode-remote/devcontainer.json#runargs
  "runArgs": ["--name", "rollingups"],

  // Set the defualt working directory inside the container. More info: https://aka.ms/vscode-remote/devcontainer.json#workspaceFolder
  "workspaceFolder": "/workspaces/rollingups",

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "installDockerBuildx": true,
      "installDockerComposeSwitch": true,
      "version": "20.10",
      "dockerDashComposeVersion": "v2"
    },

    "ghcr.io/mikaello/devcontainer-features/modern-shell-utils:2": {},

    // Other features per use case can be added here. For example:
    //"ghcr.io/devcontainers/features/python:1": {
    //	"installTools": true,
    //	"version": "3.12"
    //},

    //"ghcr.io/devcontainers/features/go:1": {
    //	"version": "1.23"
    //},

    //"ghcr.io/devcontainers-extra/features/pre-commit:2": {
    //	"version": "latest"
    //}

    "ghcr.io/devcontainers/features/terraform:1": {
      "installSentinel": true,
      "installTFsec": true,
      "installTerraformDocs": true,
      "version": "latest",
      "tflint": "latest",
      "terragrunt": "latest"
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        "docker.docker",
        "github.copilot",
        "github.copilot-chat",
        "github.vscode-github-actions",
        "github.vscode-pull-request-github",
        "timonwong.shellcheck",
        "mhutchie.git-graph",
        "eamodio.gitlens",
        "ms-azuretools.vscode-docker",
        "github.vscode-github-actions",
        "johnpapa.vscode-peacock",
        "sanjulaganepola.github-local-actions",
        "sirtori.indenticator",
        "ms-python.python",
        "batisteo.vscode-django",
        "esbenp.prettier-vscode",
        "formulahendry.auto-rename-tag",
        "rafamel.subtle-brackets"
        // Other project-specific extensions can be added here
      ],
      "settings": {
        "github.copilot.chat.codeGeneration.instructions": [
          {
            "text": "This dev container includes the Docker CLI (`docker`) pre-installed and available on the `PATH` for running and managing containers using the Docker daemon on the host machine."
          }
        ],
        // When installing the python feature, uncomment the following lines to set the default interpreter path.
        // More info: https://aka.ms/vscode-remote/containers/python
        // "python.defaultInterpreterPath": "/usr/local/python/current/bin/python",
        // "[python]": {
        //     "editor.defaultFormatter": "ms-python.autopep8"
        // },
        "editor.tabSize": 4,
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "bash",
            "icon": "terminal-bash"
          },
          "zsh": {
            "path": "zsh"
          },
          "fish": {
            "path": "fish"
          },
          "tmux": {
            "path": "tmux",
            "icon": "terminal-tmux"
          },
          "pwsh": {
            "path": "pwsh",
            "icon": "terminal-powershell"
          }
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
        "files.autoSave": "afterDelay",
        "git.confirmSync": false,
        "git.autofetch": true,
        "terminal.integrated.fontFamily": "FiraCode Nerd Font",
        "explorer.confirmDragAndDrop": false,
        "notebook.lineNumbers": "on",
        "files.exclude": {
          "**/.svn": false
        },
        "python.analysis.supportRestructuredText": false,
        "python.analysis.typeCheckingMode": "standard",
        "flake8.args": ["--ignore=F811"],
        "editor.minimap.enabled": false,
        "autoDocstring.docstringFormat": "numpy",
        "autoDocstring.startOnNewLine": true,
        "python.analysis.inlayHints.functionReturnTypes": true,
        "python.analysis.supportDocstringTemplate": true,
        "editor.rulers": [79],
        "terminal.integrated.enableMultiLinePasteWarning": "never",
        "editor.detectIndentation": false,
        "workbench.colorTheme": "Solarized Dark",
        "workbench.preferredDarkColorTheme": "Solarized Dark",
        "workbench.preferredHighContrastColorTheme": "Solarized Light",
        "editor.stickyScroll.enabled": false,
        "dotfiles.installCommand": "install.sh",
        "dotfiles.repository": "yifattih/dotfiles",
        "peacock.affectEditorGroupBorder": true,
        "peacock.affectPanelBorder": true,
        "peacock.affectSideBarBorder": true,
        "peacock.affectStatusAndTitleBorders": true,
        "peacock.affectTabActiveBorder": true,
        "peacock.darkenLightenPercentage": 10,
        "peacock.favoriteColors": [
          {
            "name": "Angular Red",
            "value": "#dd0531"
          },
          {
            "name": "Azure Blue",
            "value": "#007fff"
          },
          {
            "name": "JavaScript Yellow",
            "value": "#f9e64f"
          },
          {
            "name": "Mandalorian Blue",
            "value": "#1857a4"
          },
          {
            "name": "Node Green",
            "value": "#215732"
          },
          {
            "name": "React Blue",
            "value": "#61dafb"
          },
          {
            "name": "Something Different",
            "value": "#832561"
          },
          {
            "name": "Svelte Orange",
            "value": "#ff3d00"
          },
          {
            "name": "Vue Green",
            "value": "#42b883"
          }
        ],
        "workbench.activityBar.location": "top",
        "githubPullRequests.pushBranch": "always",
        "editor.fontFamily": "",
        "editor.fontLigatures": false,
        "workbench.iconTheme": "material-icon-theme",

        "window.zoomLevel": 0,
        "workbench.editor.showTabs": "none",
        "editor.scrollbar.vertical": "hidden",
        "editor.overviewRulerBorder": false,
        "editor.hideCursorInOverviewRuler": true,
        "editor.formatOnSave": true,
        "editor.guides.indentation": false,
        "indenticator.width": 0.1,
        "indenticator.color.dark": "rgba(255, 255, 255, 0.25)",
        "editor.matchBrackets": "never",
        "breadcrumbs.enabled": false,
        "workbench.sideBar.location": "right",
        "editor.glyphMargin": false,
        "workbench.statusBar.visible": false,
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        }
      }
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "./.devcontainer/scripts/post_create_command",

  // Use 'postCreateCommand' to run commands after the container started.
  "postStartCommand": "./.devcontainer/scripts/post_start_command"

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}
